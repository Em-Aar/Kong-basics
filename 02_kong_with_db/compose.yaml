networks:
  default:
    name: kong-net

services:
  service_01_products:
    container_name: service_01_products
    hostname: service_01_products
    build:
      context: ./service_01_products
      dockerfile: ./Dockerfile
    ports:
      - "8080:8002"
    networks:
      - default

  service_02_orders:
    container_name: service_02_orders
    hostname: service_02_orders
    build:
      context: ./service_02_orders
      dockerfile: ./Dockerfile
    ports:
      - "8081:8003"
    networks:
      - default

  postgres:
    image: postgres:latest
    restart: always
    container_name: kong-database
    environment:
      POSTGRES_USER: "kong"
      POSTGRES_PASSWORD: "kong"
      POSTGRES_DB: "kong"
    ports:
      - "5432:5432"

  kong-bootstrap:
    image: kong:3.6.1-ubuntu
    container_name: kong-bootstrap
    hostname: kong-bootstrap
    depends_on:
      - postgres
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "kong-database"
      KONG_PG_DATABASE: "kong"
      KONG_PG_USER: "kong"
      KONG_PG_PASSWORD: "kong"
    command: "kong migrations bootstrap"
    restart: "on-failure"

  kong:
    image: kong:3.6.1-ubuntu
    restart: always
    container_name: kong
    hostname: kong
    depends_on:
      - kong-bootstrap
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "kong-database"
      KONG_PG_DATABASE: "kong"
      KONG_PG_USER: "kong"
      KONG_PG_PASSWORD: "kong"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002, 0.0.0.0:8445 ssl"
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    command: "kong start"
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8443:8443"
      - "8444:8444"
      - "8445:8445"
    volumes:
      - ./config:/opt/kong

volumes:
  db_user_management:
    driver: local
